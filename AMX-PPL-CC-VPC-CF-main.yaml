AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudformation Stack which create:
  VPC of Application
    - Stack Working 100%
    - VPC
    - 2 public subnet
    - 4 private subnet
    - 1 Route Table for Public subnets
    - 2 Route Table for private subnets
    - 1 Internet Gateway
    - 2 Elastic IPs
    - 2 NAT Gateway for Private subnets
    - 3 NACL (1Pub-2Priv)
    - 3 SecurityGroups (1Pub-2Priv)
  "

# ==========================================================================
Parameters:
  VPCPrefixName:
    Description: Add the VPC Name
    Type: String
    Default: AMX-PPL-CC

  VPCCidr:
    Description: Add the VPC CIDR
    Type: String
    Default: 172.29.172.0/23

  AZ1:
    Description: Select availability zone one
    Type: AWS::EC2::AvailabilityZone::Name

  AZ2:
    Description: Select availability zone two
    Type: AWS::EC2::AvailabilityZone::Name

  CIDRBlockSubnet1:
    Description: IPv4 CIDR Block Public Subnet 1
    Type: String
    Default: 172.29.172.0/26

  CIDRBlockSubnet2:
    Description: IPv4 CIDR Block Public Subnet 2
    Type: String
    Default: 172.29.172.64/26

  CIDRBlockSubnet3:
    Description: IPv4 CIDR Block Private Subnet 1
    Type: String
    Default: 172.29.172.128/25

  CIDRBlockSubnet4:
    Description: IPv4 CIDR Block Private Subnet 2
    Type: String
    Default: 172.29.173.0/25

  CIDRBlockSubnet5:
    Description: IPv4 CIDR Block Private Subnet 3
    Type: String
    Default: 172.29.173.128/26

  CIDRBlockSubnet6:
    Description: IPv4 CIDR Block Private Subnet 4
    Type: String
    Default: 172.29.173.192/26

  Environment:
    Type: String

#-----------------------------------------------------------------------------
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC"

  Subnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet1
      AvailabilityZone: !Ref AZ1
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PUB-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PUB-01"
        - Key: ApplicationRole
          Value: Web

  Subnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet2
      AvailabilityZone: !Ref AZ2
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PUB-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PUB-02"
        - Key: ApplicationRole
          Value: Web

  Subnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet3
      AvailabilityZone: !Ref AZ1
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-APP-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-APP-01"
        - Key: ApplicationRole
          Value: Compute
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  Subnet04:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet4
      AvailabilityZone: !Ref AZ2
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-APP-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-APP-02"
        - Key: ApplicationRole
          Value: Compute
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  Subnet05:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet5
      AvailabilityZone: !Ref AZ1
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-DATA-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-DATA-01"
        - Key: ApplicationRole
          Value: DB

  Subnet06:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRBlockSubnet6
      AvailabilityZone: !Ref AZ2
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-DATA-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-PRV-DATA-02"
        - Key: ApplicationRole
          Value: DB

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PUB-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PUB-01"
        - Key: ApplicationRole
          Value: WEB

  RouteTableAssociationPublicSubnets1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet01
      RouteTableId: !Ref PublicRouteTable

  RouteTableAssociationPublicSubnets2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet02
      RouteTableId: !Ref PublicRouteTable

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-IGW-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-IGW-01"
        - Key: ApplicationRole
          Value: igw-pub

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PRV-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PRV-01"
        - Key: ApplicationRole
          Value: APP

  RouteTableAssociationPrivateSubnets1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet03
      RouteTableId: !Ref PrivateRouteTable

  RouteTableAssociationPrivateSubnets2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet05
      RouteTableId: !Ref PrivateRouteTable

  Private2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PRV-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-RT-PRV-02"
        - Key: ApplicationRole
          Value: Data

  RouteTableAssociationPrivateSubnets3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet04
      RouteTableId: !Ref Private2RouteTable

  RouteTableAssociationPrivateSubnets4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet06
      RouteTableId: !Ref Private2RouteTable

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-EIP-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-EIP-01"
        - Key: ApplicationRole
          Value: App

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      SubnetId: !Ref Subnet01
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NTGW-PUB-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NTGW-PUB-01"
        - Key: ApplicationRole
          Value: Web

  AttachNatGateway1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  ElasticIPZoneB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-EIP-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-EIP-02"
        - Key: ApplicationRole
          Value: Web

  NatGatewayZoneB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPZoneB.AllocationId
      SubnetId: !Ref Subnet02
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NTGW-PUB-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NTGW-PUB-02"
        - Key: ApplicationRole
          Value: Web

  AttachNatGateway2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref Private2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayZoneB

  PublicNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PUB-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PUB-01"
        - Key: Network
          Value: Public
        - Key: ApplicationRole
          Value: NACL

  InboundPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  OutboundPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  PrivateNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PRV-01"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PRV-01"
        - Key: Network
          Value: Private
        - Key: ApplicationRole
          Value: NACL

  InboundPrivateNetworkAclEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "PrivateNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  OutboundPrivateNetworkAclEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "PrivateNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  Private2NetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PRV-02"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-NACL-PRV-02"
        - Key: Network
          Value: Private
        - Key: ApplicationRole
          Value: NACL

  InboundPrivate2NetworkAclEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "Private2NetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  OutboundPrivate2NetworkAclEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref "Private2NetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  PublicNetworkAclAssociation0:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Subnet01
      NetworkAclId: !Ref PublicNetworkAcl

  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Subnet02
      NetworkAclId: !Ref PublicNetworkAcl

  PrivateSubnetNetworkAclAssociation0:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "Subnet03"
      NetworkAclId: !Ref "PrivateNetworkAcl"

  PrivateSubnetNetworkAclAssociation1:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "Subnet04"
      NetworkAclId: !Ref "PrivateNetworkAcl"

  Private2SubnetNetworkAclAssociation2:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "Subnet05"
      NetworkAclId: !Ref "Private2NetworkAcl"

  Private2SubnetNetworkAclAssociation3:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref "Subnet06"
      NetworkAclId: !Ref "Private2NetworkAcl"

  WEBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security Group for resources in the web tier
      SecurityGroupIngress:
        - Description: Ingress rule for the web SG
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.29.172.0/24

      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-WEB"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-WEB"
        - Key: ApplicationRole
          Value: Web

  APPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security Group for resources in the app tier
      SecurityGroupIngress:
        - Description: Ingress rule for the app SG
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.29.172.0/24

      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-APP"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-APP"
        - Key: ApplicationRole
          Value: App

  DataSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security Group for resources in the data tier
      SecurityGroupIngress:
      - Description: Ingress rule for the data SG
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 172.29.172.0/24

      Tags:
        - Key: Name
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-DATA"
        - Key: Nombre
          Value: !Sub "${VPCPrefixName}-${Environment}-VPC-SG-DATA"
        - Key: ApplicationRole
          Value: Data

#==========================================================================
Outputs:
  VPCid:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: PPL-CC-VPCID
  VPCCidrBlock:
    Description: The CIDR Block of the VPC
    Value: !GetAtt  VPC.CidrBlock
    Export:
      Name: PPL-CC-VPCCidrBlock
  WEBSecurityGroupId:
    Description: The ID of the WEB Security Group
    Value: !Ref WEBSecurityGroup
    Export:
      Name: PPL-CC-WEBSecurityGroupID
  APPSecurityGroupId:
    Description: The ID of the APP Security Group
    Value: !Ref APPSecurityGroup
    Export:
      Name: PPL-CC-APPSecurityGroupID
  DataSecurityGroupId:
    Description: The ID of the Data Security Group
    Value: !Ref DataSecurityGroup
    Export:
      Name: PPL-CC-DataSecurityGroupID
  Subnet01:
    Description: The ID of the Subnet1
    Value: !Ref Subnet01
    Export:
      Name: PPL-CC-Subnet01ID
  Subnet02:
    Description: The ID of the Subnet2
    Value: !Ref Subnet02
    Export:
      Name: PPL-CC-Subnet02ID
  Subnet03:
    Description: The ID of the Subnet3
    Value: !Ref Subnet03
    Export:
      Name: PPL-CC-Subnet03ID
  Subnet04:
    Description: The ID of the Subnet4
    Value: !Ref Subnet04
    Export:
      Name: PPL-CC-Subnet04ID
  Subnet05:
    Description: The ID of the Subnet5
    Value: !Ref Subnet05
    Export:
      Name: PPL-CC-Subnet05ID
  Subnet06:
    Description: The ID of the Subnet6
    Value: !Ref Subnet06
    Export:
      Name: PPL-CC-Subnet06ID
  PublicRouteTable:
    Description: The ID of the Public Route Table
    Value: !Ref PublicRouteTable
    Export:
      Name: PPL-CC-PublicRouteTableID
  PrivateRouteTable:
    Description: The ID of the Private Route Table
    Value: !Ref PrivateRouteTable
    Export:
      Name: PPL-CC-PrivateRouteTableID
  Private2RouteTable:
    Description: The ID of the second Private Route Table
    Value: !Ref Private2RouteTable
    Export:
      Name: PPL-CC-Private2RouteTableID
